// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty;

  define(['jquery', 'angular', 'data'], function($, angular, Data) {
    var app, getCountryData, getOccupationData, getOccupations;
    app = angular.module('graph.controllers', []);
    app.controller('AppController', function($scope, $timeout) {
      var graphData;
      $scope.dataUsed = 'ppp';
      $scope.countries = Data;
      $scope.sortKeyword = 'key';
      $scope.occupations = getOccupations();
      graphData = function(name, data) {
        var applyNewData;
        if ($scope.activeTab === name) {
          $scope.activeTab = void 0;
          return;
        }
        applyNewData = function() {
          $scope.activeTab = name;
          return $scope.graphArr = data;
        };
        if ($scope.activeTab === void 0) {
          return applyNewData();
        } else {
          $scope.activeTab = void 0;
          return $timeout(applyNewData, 250);
        }
      };
      $scope.updateDataUsed = function(type) {
        $scope.dataUsed = type;
        if ($scope.sortKeyword !== 'key') {
          return $scope.sortKeyword = "-" + type;
        }
      };
      $scope.updateKeyword = function(input) {
        if (input === 'key') {
          return $scope.sortKeyword = 'key';
        } else {
          return $scope.sortKeyword = '-' + $scope.dataUsed;
        }
      };
      $scope.toggleCountry = function(country) {
        var countryData, countryName;
        $scope.dataType = 'country';
        countryName = country['Country'];
        countryData = getCountryData(country);
        return graphData(countryName, countryData);
      };
      $scope.toggleOccupation = function(occupation) {
        var occupationData, occupationName;
        $scope.dataType = 'occupation';
        occupationName = occupation;
        occupationData = getOccupationData(occupation);
        return graphData(occupationName, occupationData);
      };
      $scope.valueToWidth = function(value) {
        return value * 380 / 6000;
      };
    });
    getOccupations = function() {
      var key, occupations, value, _ref;
      occupations = [];
      _ref = Data[0];
      for (key in _ref) {
        if (!__hasProp.call(_ref, key)) continue;
        value = _ref[key];
        occupations.push(key);
      }
      occupations.shift();
      return occupations;
    };
    getOccupationData = function(occupation) {
      var arr, countryObj, obj, occupationData, _i, _len;
      occupationData = [];
      for (_i = 0, _len = Data.length; _i < _len; _i++) {
        countryObj = Data[_i];
        if (countryObj[occupation] != null) {
          obj = {};
          obj.key = countryObj.Country;
          arr = countryObj[occupation];
          obj.ppp = arr[0];
          obj.actual = arr[1];
          occupationData.push(obj);
        }
      }
      return occupationData;
    };
    getCountryData = function(country) {
      var arr, countryData, job, obj, salary;
      countryData = [];
      for (job in country) {
        if (!__hasProp.call(country, job)) continue;
        salary = country[job];
        if (typeof salary === 'object' && (salary != null)) {
          obj = {};
          obj.key = job;
          arr = salary;
          obj.ppp = arr[0];
          obj.actual = arr[1];
          countryData.push(obj);
        }
      }
      return countryData;
    };
    return app;
  });

}).call(this);


//# sourceMappingURL=controllers.map
